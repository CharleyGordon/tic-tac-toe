[data-grid] {
  display: grid;
}
[data-even-columns] {
  grid-auto-flow: column;
  grid-auto-columns: 1fr;
}
[data-flex] {
  display: flex;
}
[data-fixed] {
  position: fixed;
}
[data-justify-content="center"] {
  justify-content: center;
}
[data-justify-items="center"] {
  justify-content: center;
}
[data-align-content="center"] {
  align-content: center;
}
[data-align-items="start"] {
  align-items: start;
}
[data-align-items="center"] {
  align-items: center;
}
[data-relative] {
  position: relative;
}
[data-absolute] {
  position: absolute;
}
:root {
  font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
    Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
}
*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  font: inherit;
  text-decoration: inherit;
  color: inherit;
}
body {
  width: 100%;
  min-height: 100vh;
}
ul {
  list-style: none;
}
.istarget {
  --time: 0.4s;
  --delay: 0s;
  transition: scale var(--time) var(--delay);
}
.istarget:is(:target, .redirected) {
  --delay: var(--time);
}
.istarget:not(:target, .redirected) {
  scale: 0;
}
:target ~ .home-screen {
  scale: 0;
}

.home-screen,
#settings {
  place-self: center;
}
.home-screen {
  text-align: center;
}
/* here */
.turn-indicator,
.board nav,
.players,
.screen button[type="submit"],
fieldset {
  justify-self: center;
}
.turn-indicator {
  grid-auto-flow: column;
  align-self: end;
  padding: 1.5vmax;
  pointer-events: none;
}
.board {
  grid-template-columns: repeat(3, 1fr);
  place-self: stretch center;
  width: 100%;
  margin-block-start: 2rem;
  padding: 5rem 2vw;
  aspect-ratio: 1;
  --gap: 0;
  gap: calc(var(--gap) * 1rem);
}
.board button {
  display: grid;
  place-items: center;
  position: relative;
  border: none;
  overflow: hidden;
  font-size: 0px;
  background-color: transparent;
}
.board button:is([data-column="2"], [data-column="3"]) {
  border-left: 4px solid black;
}
.board button:is([data-row="1"], [data-row="2"]) {
  border-bottom: 4px solid black;
}
.board button::after,
.board button[data-sign]::before {
  transition: inherit;
  position: absolute;
  text-shadow: 1px 1px 1px black, -1px -1px 1px black;
  font-size: 3vmax;
}
.board button::after {
  translate: -100%;
  content: attr(data-spell);
}
.board button[data-spell]::after {
  translate: 0%;
}
.board button[data-sign]::before {
  content: attr(data-sign);
  position: absolute;
  text-shadow: 1px 1px 1px black, -1px -1px 1px black;
  font-size: 3vmax;
}
.board button[data-spell]::before {
  translate: 50vmax;
}
.turn-indicator span {
  align-self: center;
}
.player {
  margin-inline-start: 0.5rem;
  font-weight: 900;
  font-size: 2rem;
  text-shadow: 1px 1px 2px black;
}
.players,
:where(.players ~ .board nav) {
  --padding-block: min(1vh, 10px);
  --nav-padding-block: calc(var(--padding-block) + 2rem);
  padding-block: var(--padding-block, 0);
}
.board nav {
  padding-block: var(--nav-padding-block);
}
.board nav ul {
  gap: 4rem;
}
.players {
  gap: 0.5em;
  font-size: 3rem;
}
.players .versus {
  color: wheat;
  filter: drop-shadow(1px 1px 3px black);
}
button {
  transition: 0.5s;
}
button:focus {
  outline: 3px dashed white;
}
button:not(:disabled):is(:hover, :focus) {
  background-color: var(--player-color, #444);
  filter: brightness(0.85) blur(0.5);
}
.reset::before,
a[href="#settings"]::before,
a[href="#user-settings"]::before,
a[href="#gameboard-settings"]::before,
a[title="exit"]::before,
[title="play"]::before {
  content: "";
  /* position: absolute; */
  display: block;
  justify-self: center;
  width: 24px;
  aspect-ratio: 1;
  background-size: contain;
  background-repeat: no-repeat;
}
.reset::before {
  background-image: url("restart.svg");
}
a[href="#settings"]::before {
  background-image: url("settings.svg");
}
a[href="#user-settings"]::before {
  background-image: url("user.svg");
}
a[href="#gameboard-settings"]::before {
  background-image: url("board.svg");
}
a[title="exit"]::before {
  background-image: url("exit.svg");
}
[title="play"]::before {
  background-image: url("play-button.svg");
  scale: 2;
}
/* settings */
#settings {
  width: 70%;
  margin: 0 auto;
  border: 4px solid black;
  width: fit-content;
}

#settings.redirected ~ * {
  scale: 0;
}
#settings a:is(:hover, :focus) {
  filter: drop-shadow(-1px -1px 1px black);
}
#settings nav {
  order: -1;
  text-align: center;
}
#settings > * {
  outline: 1px solid;
  padding: 1rem;
}
#user-settings span {
  grid-column: 1 / -1;
  text-align: center;
}
.screen {
  grid-auto-flow: column;
  grid-auto-columns: 100%;
  overflow: hidden;
}
.screen > * {
  scale: 0;
}
.screen :target {
  order: -1;
  scale: 1;
}

.screen button[type="submit"] {
  grid-column: 1 / -1;
  text-align: center;
  width: fit-content;
  padding: 0.25rem 5rem;
}

label {
  display: contents;
}
form {
  grid-template-columns: repeat(2, 1fr);
  margin: 0 auto;
}
fieldset {
  justify-items: center;
  gap: 0.5rem;
  width: fit-content;
  transition: 0.5s;
  /*     transition: transform 1.5s, opacity .25s; */
}
fieldset#player-1 {
  --player-color: red;
}
fieldset#player-2 {
  --player-color: green;
}
input {
  width: 50%;
  font-weight: 700;
  text-align: center;
  color: var(--player-color, black);
}
.screen > * {
  gap: 2rem;
  transition: scale 0.5s;
}

#gameboard-settings {
  grid-template-columns: 1fr;
}
@media (min-width: 800px) {
  .board {
    /* width: min(70%, 800px); */
    align-self: center;
    width: min(70%, 70vh);
    margin-block-start: 0;
    /* height: min(70%, 70vh); */
  }
  .board nav {
    --nav-padding-block: 0;
  }
}
